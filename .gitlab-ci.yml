image: phaus/docker-golang-build:1.11-alpine

stages:
  - prepare
  - build
  - publish
  - test

variables:
  DOCKER_IMAGE_TAGGED: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA 
  DOCKER_IMAGE_LATEST: $CI_REGISTRY_IMAGE:latest 
  REPO_NAME: git-lab.de/$CI_PROJECT_PATH

format:
  stage: prepare
  before_script:
    - mkdir -p $GOPATH/src/$REPO_NAME
    - ln -svf $CI_PROJECT_DIR/* $GOPATH/src/$REPO_NAME
    - mkdir -p $GOPATH/src/github.com/phaus/registry-cleaner
    - ln -svf $CI_PROJECT_DIR/* $GOPATH/src/github.com/phaus/registry-cleaner
    - cd $GOPATH/src/$REPO_NAME
    - glide install
    - go get ./...
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
#    - go test -race $(go list ./... | grep -v /vendor/)
  tags:
    - run.consolving.net

compile:
  stage: build
  image: phaus/gobelt:latest
  before_script:
    - mkdir -p $GOPATH/src/$REPO_NAME
    - ln -svf $CI_PROJECT_DIR/* $GOPATH/src/$REPO_NAME
    - mkdir -p $GOPATH/src/github.com/phaus/registry-cleaner
    - ln -svf $CI_PROJECT_DIR/* $GOPATH/src/github.com/phaus/registry-cleaner
    - cd $GOPATH/src/$REPO_NAME
    - glide install
    - go get ./...
  script:
    - go build -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/bin/cleaner
    - upx $CI_PROJECT_DIR/bin/cleaner
  artifacts:
    paths:
      - bin/cleaner
  tags:
    - run.consolving.net

publish_image:
  stage: publish
  image: docker:latest
  script:
    - docker build -t $DOCKER_IMAGE_TAGGED .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $DOCKER_IMAGE_TAGGED
  dependencies:
    - compile
  when: on_success
  tags:
    - run.consolving.net

test_image_v1:
  stage: test
  image: $DOCKER_IMAGE_TAGGED
  script:
    - cleaner test
  tags:
    - run.consolving.net  

test_image_v2:
  stage: test
  image: docker:latest
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker run $DOCKER_IMAGE_TAGGED cleaner test
  tags:
    - run.consolving.net  